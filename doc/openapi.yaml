openapi: 3.0.0
info:
  title: 'API de cidades e estados'
  description: 'API para CRUD de cidades e estados desenvolvida em php, slim e mongodb'
  contact:
    name: 'João Vitor Fazolo'
    email: jvfazolo@gmail.com
  version: '1.0'
servers:
  -
    url: 'http://localhost:8080'
paths:
  /cidade:
    get:
      tags:
        - Cidade
      operationId: 'App\Application\Controllers\CidadeController::index'
      parameters:
        -
          name: limit
          in: query
          description: 'Limite quantidade'
          schema:
            type: integer
        -
          name: sortField
          in: query
          description: 'Atributo para ordenar'
          schema:
            type: string
        -
          name: sortType
          in: query
          description: 'Tipo da ordenação (ASC ou DESC)'
          schema:
            type: string
        -
          name: offset
          in: query
          description: Offset
          schema:
            type: integer
        -
          name: search
          in: query
          description: 'String de busca no nome'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Cidade'
    post:
      tags:
        - Cidade
      operationId: 'App\Application\Controllers\CidadeController::insert'
      requestBody:
        description: 'successful operation'
        content:
          application/json:
            schema:
              properties:
                nome:
                  description: 'O Nome da cidade'
                  type: string
                estadoId:
                  description: 'ID do estado'
                  type: string
              type: object
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cidade'
        '422':
          description: 'Falha de validação'
  '/cidade/{cidadeId}':
    get:
      tags:
        - Cidade
      operationId: 'App\Application\Controllers\CidadeController::show'
      parameters:
        -
          name: cidadeId
          in: path
          description: 'Id da cidade'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cidade'
        '404':
          description: 'Cidade não encontrada'
    put:
      tags:
        - Cidade
      operationId: 'App\Application\Controllers\CidadeController::update'
      parameters:
        -
          name: cidadeId
          in: path
          description: 'Id da cidade'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
        '404':
          description: 'Cidade não encontrada'
        '422':
          description: 'Falha de validação'
    delete:
      tags:
        - Cidade
      operationId: 'App\Application\Controllers\CidadeController::delete'
      parameters:
        -
          name: cidadeId
          in: path
          description: 'Id da cidade'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Successful operation'
        '404':
          description: 'Cidade não encontrada'
  /estado:
    get:
      tags:
        - Estado
      operationId: 'App\Application\Controllers\EstadoController::index'
      parameters:
        -
          name: limit
          in: query
          description: 'Limite quantidade'
          schema:
            type: integer
        -
          name: sortField
          in: query
          description: 'Atributo para ordenar'
          schema:
            type: string
        -
          name: sortType
          in: query
          description: 'Tipo da ordenação (ASC ou DESC)'
          schema:
            type: string
        -
          name: offset
          in: query
          description: Offset
          schema:
            type: integer
        -
          name: search
          in: query
          description: 'String de busca no nome e descrição'
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Estado'
    post:
      tags:
        - Estado
      operationId: 'App\Application\Controllers\EstadoController::insert'
      requestBody:
        description: 'successful operation'
        content:
          application/json:
            schema:
              properties:
                nome:
                  description: 'O Nome do estado'
                  type: string
                abreviacao:
                  description: 'A abreviação do estado'
                  type: string
              type: object
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estado'
        '422':
          description: 'Falha de validação'
  '/estado/{estadoId}':
    get:
      tags:
        - Estado
      operationId: 'App\Application\Controllers\EstadoController::show'
      parameters:
        -
          name: estadoId
          in: path
          description: 'Id do estado'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estado'
        '404':
          description: 'Estado não encontrado'
    put:
      tags:
        - Estado
      operationId: 'App\Application\Controllers\EstadoController::update'
      parameters:
        -
          name: estadoId
          in: path
          description: 'Id do estado'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
        '404':
          description: 'Estado não encontrado'
        '422':
          description: 'Falha de validação'
    delete:
      tags:
        - Estado
      operationId: 'App\Application\Controllers\EstadoController::delete'
      parameters:
        -
          name: estadoId
          in: path
          description: 'Id do estado'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Successful operation'
        '404':
          description: 'Estado não encontrado'
components:
  schemas:
    Cidade:
      properties:
        id:
          description: 'ID da cidade'
          type: string
        nome:
          description: 'Nome da cidade'
          type: string
        estadoId:
          description: 'ID do estado que a cidade pertence'
          type: string
        dataCriacao:
          description: 'Data de criação'
          type: string
        dataAtualizacao:
          description: 'Data de atualização'
          type: string
      type: object
    Estado:
      properties:
        id:
          description: 'O ID do estado'
          type: string
        nome:
          description: 'O nome do estado'
          type: string
        abreviacao:
          description: 'A abreviação do estado'
          type: string
        dataCriacao:
          description: 'A data de criação do estado'
          type: string
        dataAtualizacao:
          description: 'A data de atualização do estado'
          type: string
      type: object
